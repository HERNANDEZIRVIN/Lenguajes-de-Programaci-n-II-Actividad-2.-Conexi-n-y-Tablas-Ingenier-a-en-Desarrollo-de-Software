// Lenguajes de Programacion Conexion ala Base de Datos.cpp : Este archivo contiene la función "main". La ejecución del programa comienza y termina ahí.
//

#include <windows.h>
#include <sql.h>
#include <sqlext.h>
#include <iostream>

using namespace std;

int main() {
	SQLHENV hEnv;
	SQLHDBC hDbc;
	SQLRETURN ret;

	// Asignar un gestor de entorno 
	ret = SQLAllocHandle(SQL_HANDLE_ENV, SQL_NULL_HANDLE, &hEnv);
	ret = SQLSetEnvAttr(hEnv, SQL_ATTR_ODBC_VERSION, (SQLPOINTER)SQL_OV_ODBC3, 0);

	// Asignar un gestor de conexion
	ret = SQLAllocHandle(SQL_HANDLE_DBC, hEnv, &hDbc);

	// Coctarse ala base de datos
	ret = SQLConnect(hDbc, (SQLWCHAR*)L"sqlserver", SQL_NTS, (SQLWCHAR*)L"Username", SQL_NTS, (SQLWCHAR*)L"Password", SQL_NTS);

	if (ret == SQL_SUCCESS || ret == SQL_SUCCESS_WITH_INFO) {
		cout << "Conectado ala Base de Datos Exitosamente IRVIN SANTIAGO HERNANDEZ HERNANDEZ. " << endl;
		// Ejemplo de ejecucion de una consulta 
		SQLHSTMT hStmt;
		ret = SQLAllocHandle(SQL_HANDLE_STMT, hDbc, &hStmt);

		cout << "+------------------------------------------------------------------------+" << endl;
		cout << "|NUMERO DE EMPLEADO:" << "              | NOMBRE:| " << "         | APELLIDO PATERNO:| " << endl;

		// Ejemplo de consulta SELECT
		ret = SQLExecDirect(hStmt, (SQLWCHAR*)L"SELECT * FROM Datos_Empleados", SQL_NTS);
		if (ret == SQL_SUCCESS || ret == SQL_SUCCESS_WITH_INFO) {
			int num_empleado;
			SQLCHAR name[255];
			SQLCHAR last_name[255];
			while (SQLFetch(hStmt) == SQL_SUCCESS) {
				SQLGetData(hStmt, 1, SQL_C_LONG, &num_empleado, 0, NULL);
				SQLGetData(hStmt, 2, SQL_C_CHAR, name, sizeof(name), NULL);
				SQLGetData(hStmt, 3, SQL_C_CHAR, last_name, sizeof(last_name), NULL);

				// SQLGetData(hStmt, 2, SQL_C_LONG, &age, 0, NULL);
				cout << "|" "        "  <<num_empleado << "                        |" << name << "                     " << last_name << endl;
			}
		}

		// Liberar el manejador de conexion
		SQLFreeHandle(SQL_HANDLE_STMT, hStmt);




	}
	else {
		cout << "Fallo la conexion ala base de datos" << endl;
	}

	// Desconectar y liberar gestores de entorno
	SQLDisconnect(hDbc);
	SQLFreeHandle(SQL_HANDLE_DBC, hDbc);
	SQLFreeHandle(SQL_HANDLE_ENV, hEnv);

	return 0;
}


